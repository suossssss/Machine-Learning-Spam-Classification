 there is a softwar packag that is us or wa up through wnumberk on microsloth for thi purpos ghost or some such on essenti take a pictur of the machin s proper config and then upon schedul or demand replac the machin s current config with the proper pictur it essenti over write the entir disk drive especi good for student access machin at librari etc ben mord wrote origin messag from crispin cowan emailaddr sent wednesdai septemb number number number number pm to ben mord cc webappsec securityfocu com secprog securityfocu subject re us of base imag delta imag for autom recoveri from attack i did my dissert work in thi area optimist comput and so wa interest in appli it to the secur problem unfortun you hit a bunch of problem a when can you commit a state as be good you can t run from a redo log forev the perform and storag penalti accumul even log structur file system garbag collect eventu so you have to commit sometim the problem is that if you commit too eagerli you might commit corrupt state if you commit too conserv you eat perform and storag penalti b what do you do if you discov that there is corrupt state in the middl of your redo log and you want some of the critic state that come after it you need some wai to dig the corrupt out of the middl and save the rest my dissert solv thi problem but you have to re write everyth in my program languag c just do thi at all impos substanti perform penalti i love vmware and us it everi dai the best dollarnumb i ever spent on softwar but it is not veri fast my propos solut to the first two problem you mention is to be less ambiti the idea is that you never commit instead you simpli revert to base state on reboot obvious you can t do thi with partit that accru import state e g a partit that store databas tabl data but in your typic web applic most partit do not accru import state for exampl your typic web server or applic server could have their entir state reset back to a known base state dure each reboot without harm the advantag of be less ambiti is that we have a quick and easi wai to frustrat certain attack without rewrit all of our softwar or spend lot of monei on addit applic specif code the first two problem you describ onli occur if we becom more ambiti and try to appli these same techniqu to for exampl the databas tabl partit where state chang remain import across reboot that would certainli be a nice touch but as you point out mani problem would have to be address first and the hardest of these can not be abstract awai from the particular applic not the least of these is the problem of write heurist for delin good from malevol state that task is roughli analog to what antivir softwar author do for a live onli thi work could not be share across mani differ system as it would be specif to a paritcular applic the third problem you mention perform penalti is an argument for do thi in hardwar much like hardwar raid anoth argument for do thi in hardwar is hack resist chang the base instanc should requir physic access to the consol e g by requir that you first flip a physic switch on your raid hardwar or modifi a bio set if the base imag can be modifi remot or by softwar then you have to worri about whether an implement flaw might permit a cracker to modifi the base imag remot ben scott mackenzi dine colleg isd phone voic mail number number number o senior dba car coordin etc email emailaddr
